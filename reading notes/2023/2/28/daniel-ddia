经由数据库的数据流
访问数据库的程序，可能：

只由同一个进程访问。则数据库可以理解为该进程向将来发送数据的中介。
由多个进程访问。则多个进程可能有的是旧版本，有的是新版本，此时数据库需要考虑向前和向后兼容的问题。
还有一种比较棘手的情况：在某个时刻，你给一个表增加了一个字段，较新的代码写入带有该字段的行，之后又被较旧的代码覆盖成缺少该字段的行。这时候就会出现一个问题：我们更新了一个字段 A，更新完后，却发现字段 B 没了。
对于应用程序，可能很短时间就可以由旧版本替换为新版本。但是对于数据，旧版本的代码写入的数据量，经年累月，可能很大。在变更了模式之后，由于这些旧模式的数据量很大，全部更新对齐到新版本的代价很高。

这种情况我们称之为：数据的生命周期超过了其对应代码的生命周期。

在读取时，数据库一般会对缺少对应列的旧数据：

填充新版本字段的默认值（default value）
如果没有默认值则填充空值（nullable）
后返回给用户。一般来说，在更改模式时（比如 alter table），数据库不允许增加既没有默认值、也不允许为空的列。
