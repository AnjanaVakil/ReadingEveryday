通过select+channel让协程退出的方式比较优雅，但是如果我们希望做到同时取消很多个协程呢？如果是定时取消协程又该怎么办？这时候select+channel的局限性就凸现出来了，即使通过定义多个channel能够解决问题，代码逻辑也会非常复杂、难以维护。要解决这种复杂的协程问题，必须有一种可以跟踪协程的方案，只有跟踪到每个协程，才能更好地控制它们，这种方案就是Go语言标准库为我们提供的Context，它也是本章的主角。
