今天不看机器学习了，今天来看看设计模式。
《Head first 设计模式》，第一眼看上去是本很通俗的设计模式书。
策略模式定义了算法族，分别封装起来，让它们之间可以相互替换。此模式让算法的变化独立于使用算法的客户。
其实这个模式的概念并不难，但这里第一章的例子反而有些不好理解。
首先先谈谈我的想法：这就和玩游戏一样，同一个角色可以穿着不同的装备，从而做出不同的行为。
那么如何实现呢，将人物和人物的行为独立开来。
比如一个“角色”类，角色类中有一个“攻击动作”的对象。
然而，攻击动作可以有很多种，它可以是戳，可以是砍，也可以是锤。
将攻击动作定义为一个接口，然后让戳砍锤去实现这个接口。
那么，只要在人物中，将攻击动作声明为戳砍锤其中的一种即可。
而且我们并不用在这个角色中实现对应的动作的具体实现。
似乎很简单，对吧。我也觉得不是很难，但想要把这个融会贯通还是不容易的。哈哈。
